Лабораторная работа №1
_______________________

Замечания.

1. Проект в IDE (Eclipse, IDEA) должен иметь название Task1.

2. Решение каждой подзадачи оформить в виде отдельного класса с названиями: Part1, Part2, ....
Значение входных данных получать из командной строки (как параметры командной строки).

3. Дополнительно в корневом пакете создать класс Demo, который демонстрирует работу всех Part1, Part2, .....
Параметры командной строки для каждой подзадачи задавать в классе Demo.

Пример (фрагмент метода Demo.main):
-------------------------------------------------------
public static void main(String[] args) {
	...
	System.out.println("=== Part2");
	Part2.main(new String[] {"12", "24"});	
	...
}
-------------------------------------------------------

4. Дополнительно написать командный файл (bat-файл в Windows или shell-скрипт в Linux), который компилирует и запускает на выполнение класс Demo.
Скрипт сохранить в каталоге Task1/src.
Вручную запустить скрипт, проверить его работоcпособность.

5. Код не должен содержать консольный ввод (чтение из консоли).

6. Соблюдать code convention.

_______________________

Вопросы на допуск.

=== 1. Какие категории типов данных существуют в Java?
- Примитивные
- Ссылочный
=== 2. Перечислите примитивные типы данных.
- Целые числа - byte, short, char, int, long
- Числа с плавающей точкой (иначе дробные) - float, double
- Логический - boolean
=== 3. Тип данных char, что хранит, область определения.
- 16 бит
- беззнаковое целое число, представляющее собой символ UTF-16 (буквы и цифры)
=== 4. Напишите метод main (два варианта).

=== 5. Укажите автоматические преобразования между примитивными типами
- byte => short => int => long => float => double
-         char  =>
=== 6. При каких преобразованиях между примитивными типами возможна утрата информации?
- floating point => integer
- larger size => lower size
=== 7. Какие преобразования между типами вы знаете.

=== 8. Что такое wrappers, autoboxing, autounboxing.
- wrapper - обертка (для действий над примитивами как на обьектами, конвертации)
=== 9. Напишите анонимный массив, массив константу, в чем отличие.
- new String[] {"a", "b", "c"}
-
10. Напишите пример двумерного массива.
- new String[3][3];

_______________________

Ход выполнения работы.

1. Написать классы, которые реализуют решение всех подзадач. Написать класс Demo.
2. Создать командный файл для вашей OS.

Когда будет дан доступ к репозиторию дополнительно сделать следующее:
3. Привязать проект к нужному узлу в репозитории и сделать коммит проекта в репозиторий.
4. Коммит не пройдет, если среди файлов, помещаемых в репозиторий, будет хотя бы один class-файл, таким образом следует class-файлы из комита исключить.
5. В обязательном порядке в репозиторий должны быть помещены метафайлы IDE (для Eclipse файл .project; для IDEA файл Task1.iml).
6. Добиться сборки проекта в Jenkins (после каждого коммита в репозиторий Jenkins пересобирает проект, если проект не был собран, то причину можно посмотреть в логах сборки).
7. Оптимизировать метрики проекта в Sonar (количество Blocker/Critical/Major isuues должно быть 0, метрика RCI как можно ближе к 100%).

_______________________

Задание 1
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part1
Вход: X Y
Выход: наибольший общий делитель X и Y
-------------------------------------------------------

Написать программу, которая находит наибольший общий делитель двух натуральных чисел.

_______________________

Задание 2
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part2
Вход: X
Выход: сумма цифр числа X
-------------------------------------------------------

Написать программу, которая находит сумму цифр заданного натурального числа.

_______________________

Задание 3
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part3
Вход: X
Выход: true, если X простое число; false в противном случае
-------------------------------------------------------

Написать программу проверки того, что заданное число простое.
Простое число - натуральное число большее единицы, которое имеет только два целых делителя: 1 и само это число.

_______________________

Задание 4
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part4
Вход: N
Выход: сумма ряда 1! - 2! + 3! - 4! + 5! - ... +/- N!
-------------------------------------------------------

Подсчитать сумму ряда для заданного целого числа N > 0:
1! - 2! + 3! - 4! + 5! - ... +/- N!

_______________________

Задание 5
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part5
Вход: N
Выход: количество N-значных "счастливых" чисел
-------------------------------------------------------

Подсчитать, сколько N-значных чисел имеют равную сумму первой половины и второй половины цифр ("счастливые" числа).
Число N является четным положительным числом.

Пример. Если N=6, то результат (выход) представляет из себя количество шестизначных чисел ABCDEF (ведущий ноль не допускается), для которых:
(A+B+C) = (D+E+F)

_______________________

Задание 6
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part6
Вход: N
Выход: первые N элементов ряда Фибоначчи
-------------------------------------------------------

Разместить в памяти массив из N элементов и заполнить его рядом Фибоначчи: 1, 1, 2, 3, 5, 8, 13, 21, ... . 
В этом ряду каждое следующее число является суммой двух предыдущих.

_______________________

Задание 7
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part7
Вход: N
Выход: первые N простых чисел в ряде натуральных чисел, разделенные пробелами
-------------------------------------------------------

Создать целый массив из N элементов и заполнить его простыми числами: 2, 3, 5, 7, 11, 13, 17.

Пример. Если N = 5, то результатом является массив с элементами 2 3 5 7 11

_______________________

Задание 8
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part8
Вход: N M
Выход: таблица с буквами 'Ч' и 'Б' в шахматном порядке
-------------------------------------------------------

Создать двумерный массив (N*M) символов и заполнить его буквами 'Ч' и 'Б' в шахматном порядке.

Пример. Если N = 3, M = 5, то результат должен представлять из себя таблицу:
-------------------------------------------------------
ЧБЧБЧ
БЧБЧБ
ЧБЧБЧ
-------------------------------------------------------

_______________________

Задание 9
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part9
Вход: отсутствует
Выход: 1 2 3 ... 32
-------------------------------------------------------

Создать целый четырехмерный массив с двумя значениями в каждом измерении.
Заполнить массив числами из начала натурального ряда: 1, 2, 3, ... .
При заполнении использовать один цикл.

_______________________

Задание 10
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part10
Вход: N
Выход: биномиальные коэффициенты разделенные пробелами
-------------------------------------------------------

Создать "треугольный" массив из N строк и заполнить его биномиальными коэффициентами.

Пример. Если N = 5, то результат должен представлять из себя таблицу:
-------------------------------------------------------
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
-------------------------------------------------------

_______________________

Задание 11
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part11
Вход: произвольное количество параметров командной строки
Выход: сумма цифр, которые присутствуют в значениях параметров командной строки
-------------------------------------------------------

Подсчитать сумму всех десятичных цифр (0, 1, ..., 9), которые присутствуют среди значений параметров командной строки.

Пример.
Если на входе три параметра командной строки: фыва34asd 3d5s 2k
То результат должен быть таким (3+4+3+5+2): 17

_______________________

Задание 12
-------------------------------------------------------
Название класса: ua.nure.yourlastname.task1.Part12
Вход: произвольное количество параметров командной строки
Выход: конкатенация всех латинских букв, которые присутствуют в значениях параметров командной строки
-------------------------------------------------------

Конкатенировать в порядке их появления все латинские буквы, которые присутствуют в значениях параметров командной строки.

Пример.
Если на входе три параметра командной строки: фыва@34asd $3F5X 2k
То результат должен быть таким: asdFXk
